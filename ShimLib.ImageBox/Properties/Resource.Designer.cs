//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShimLib.Properties {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ShimLib.Properties.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대한 현재 스레드의 CurrentUICulture
        ///   속성을 재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_04x06 {
            get {
                object obj = ResourceManager.GetObject("Raster_04x06", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_05x08 {
            get {
                object obj = ResourceManager.GetObject("Raster_05x08", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_05x12 {
            get {
                object obj = ResourceManager.GetObject("Raster_05x12", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_06x08 {
            get {
                object obj = ResourceManager.GetObject("Raster_06x08", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_06x13 {
            get {
                object obj = ResourceManager.GetObject("Raster_06x13", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_07x12 {
            get {
                object obj = ResourceManager.GetObject("Raster_07x12", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_08x08 {
            get {
                object obj = ResourceManager.GetObject("Raster_08x08", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_08x12 {
            get {
                object obj = ResourceManager.GetObject("Raster_08x12", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_08x16 {
            get {
                object obj = ResourceManager.GetObject("Raster_08x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_08x18 {
            get {
                object obj = ResourceManager.GetObject("Raster_08x18", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_10x18 {
            get {
                object obj = ResourceManager.GetObject("Raster_10x18", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_10x20 {
            get {
                object obj = ResourceManager.GetObject("Raster_10x20", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_10x22 {
            get {
                object obj = ResourceManager.GetObject("Raster_10x22", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_12x16 {
            get {
                object obj = ResourceManager.GetObject("Raster_12x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_12x27 {
            get {
                object obj = ResourceManager.GetObject("Raster_12x27", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_16x08 {
            get {
                object obj = ResourceManager.GetObject("Raster_16x08", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Raster_16x12 {
            get {
                object obj = ResourceManager.GetObject("Raster_16x12", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   [todo]
        ///- 버그
        ///ok - float 이미지 컬러로 표시되는 버그 수정
        ///
        ///- 테스트
        ///  - 이미지 버퍼를 byte[] 타입으로 만들었을때 성능 차이
        ///
        ///- ImageBox
        ///  no - 커서표시, 디버그 표시 ImageDrawing 으로 표시할것 : 성능차이 미세, 구현 번거러움
        ///  ok - float 타입 밝기값 Range를 속성에서 지정하게 함
        ///  ok - 마우스 왼쪽으로버튼으로만 Panning 되도록 할것
        ///  ok - FloatValueFormat 속성 추가
        ///  - ImageBuffer 클래스로 만듦
        ///  - 1비트 버퍼 표시 지원
        ///  - 이미지 로드시 라인단위로 읽지 않고 전체 버퍼 읽기, stride 관리
        ///  - 스크롤바 추가
        ///  - ROI 편집 기능 내장
        ///  - ROI 라인, 폭 으로 입력 기능 추가
        ///
        ///- Drawing 함수 추가
        ///  ok - AggressiveInlining Attribute
        ///  ok - .net version에 따라 AggressiveIn[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string todo {
            get {
                return ResourceManager.GetString("todo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap TomThumb1 {
            get {
                object obj = ResourceManager.GetObject("TomThumb1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap TomThumb2 {
            get {
                object obj = ResourceManager.GetObject("TomThumb2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   STARTFONT 2.1
        ///FONT -wenquanyi-unibit-medium-r-normal--16-160-75-75-C-80-iso10646-1
        ///SIZE 16 75 75
        ///FONTBOUNDINGBOX 16 16 0 -4
        ///COMMENT &quot;Generated by fontforge, http://fontforge.sourceforge.net&quot;
        ///COMMENT &quot;==========================================================&quot;
        ///COMMENT &quot;Wen Quan Yi Unibit&quot;
        ///COMMENT &quot;----------------------------------------------------------&quot;
        ///COMMENT &quot;Summary:&quot;
        ///COMMENT &quot;&quot;
        ///COMMENT &quot;Developer: The WenQuanYi Project Contributors&quot;
        ///COMMENT &quot;Webpage  : http://wqy.sourceforge.net/en/&quot;
        ///COMMENT &quot;Font Na[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string unibit_bdf {
            get {
                return ResourceManager.GetString("unibit_bdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap Unifont_16x16 {
            get {
                object obj = ResourceManager.GetObject("Unifont_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   STARTFONT 2.1
        ///FONT -gnu-Unifont-Medium-R-Normal-Sans-16-160-75-75-c-80-iso10646-1
        ///SIZE 16 75 75
        ///FONTBOUNDINGBOX 16 16 0 -2
        ///STARTPROPERTIES 24
        ///COPYRIGHT &quot;Copyright (C) 1998-2021 Roman Czyborra, Paul Hardy, Qianqian Fang, Andrew Miller, Johnnie Weaver, David Corbett, Nils Moskopp, Rebecca Bettencourt, et al. License: SIL Open Font License version 1.1 and GPLv2+: GNU GPL version 2 or later &lt;http://gnu.org/licenses/gpl.html&gt; with the GNU Font Embedding Exception.&quot;
        ///FONT_VERSION &quot;13.0.06&quot;
        ///FONT_TYPE &quot;Bitmap&quot;
        ///FOUND[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string unifont_bdf {
            get {
                return ResourceManager.GetString("unifont_bdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   0000:AAAA00018000000180004A51EA505A51C99E0001800000018000000180005555
        ///0001:AAAA00018000000180003993C252325F8A527193800000018000000180005555
        ///0002:AAAA00018000000180003BA5C124311989247125800000018000000180005555
        ///0003:AAAA00018000000180007BA5C1247919C1247925800000018000000180005555
        ///0004:AAAA000180000001800079BFC2487A49C2487989800000018000000180005555
        ///0005:AAAA00018000000180007A4DC2527B53C2D67A4F800000018000000180005555
        ///0006:AAAA000180000001800031A5CA287A31CA2849A5800000018000000180005555
        ///0007:AAAA0001800000018[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string unifont_hex {
            get {
                return ResourceManager.GetString("unifont_hex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   STARTFONT 2.1
        ///FONT -gnu-Unifont Japanese-Medium-R-Normal-Sans-16-160-75-75-c-80-iso10646-1
        ///SIZE 16 75 75
        ///FONTBOUNDINGBOX 16 16 0 -2
        ///STARTPROPERTIES 24
        ///COPYRIGHT &quot;Copyright (C) 1998-2021 Roman Czyborra, Paul Hardy, Qianqian Fang, Andrew Miller, Johnnie Weaver, David Corbett, Nils Moskopp, Rebecca Bettencourt, et al. License: SIL Open Font License version 1.1 and GPLv2+: GNU GPL version 2 or later &lt;http://gnu.org/licenses/gpl.html&gt; with the GNU Font Embedding Exception.&quot;
        ///FONT_VERSION &quot;13.0.06&quot;
        ///FONT_TYPE &quot;Bitm[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string unifont_jp_bdf {
            get {
                return ResourceManager.GetString("unifont_jp_bdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   0000:AAAA00018000000180004A51EA505A51C99E0001800000018000000180005555
        ///0001:AAAA00018000000180003993C252325F8A527193800000018000000180005555
        ///0002:AAAA00018000000180003BA5C124311989247125800000018000000180005555
        ///0003:AAAA00018000000180007BA5C1247919C1247925800000018000000180005555
        ///0004:AAAA000180000001800079BFC2487A49C2487989800000018000000180005555
        ///0005:AAAA00018000000180007A4DC2527B53C2D67A4F800000018000000180005555
        ///0006:AAAA000180000001800031A5CA287A31CA2849A5800000018000000180005555
        ///0007:AAAA0001800000018[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string unifont_sample_hex {
            get {
                return ResourceManager.GetString("unifont_sample_hex", resourceCulture);
            }
        }
    }
}
